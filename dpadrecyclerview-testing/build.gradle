plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.kotlin.android)
}

apply from: "$rootProject.projectDir/gradle/publish.gradle"
apply from: "$rootProject.projectDir/gradle/coverage.gradle"

android {
    namespace 'com.rubensousa.dpadrecyclerview.testing'
    compileSdk versions.compileSdkVersion

    defaultConfig {
        minSdk versions.minSdkVersion
        targetSdk versions.targetSdkVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments useTestStorageService: 'true'
        testInstrumentationRunnerArguments additionalTestOutputDir: 'storage/emulated/0/recordings/com.rubensousa.dpadrecyclerview.testing.test'
        testInstrumentationRunnerArguments listener: 'com.rubensousa.dpadrecyclerview.testfixtures.recording.TestRecordingListener'
        multiDexEnabled true
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
        }
    }

    buildFeatures {
        buildConfig false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    publishing {
        singleVariant('release') {
            withSourcesJar()
            withJavadocJar()
        }
    }

}

dependencies {
    implementation project (':dpadrecyclerview')
    debugImplementation libs.androidx.fragment.testing.manifest
    api libs.androidx.test.runner
    api libs.androidx.test.core.ktx
    api libs.androidx.test.rules
    api libs.androidx.test.rules
    api libs.androidx.test.truth
    api libs.androidx.test.junit
    api libs.androidx.test.espresso.core
    api libs.androidx.test.espresso.idling
    api libs.androidx.test.espresso.contrib
    api libs.androidx.test.uiautomator
    androidTestImplementation libs.androidx.fragment.testing
    androidTestImplementation project (':dpadrecyclerview-test-fixtures')
    androidTestUtil libs.androidx.test.services
}
